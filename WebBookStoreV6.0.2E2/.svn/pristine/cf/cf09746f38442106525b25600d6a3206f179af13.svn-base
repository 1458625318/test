<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 引入外部属性配置文件 -->
	<context:property-placeholder location="classpath:*.properties" />

	<!-- 数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="maxActive" value="100"></property>
		<property name="initialSize" value="20"></property>
		<property name="maxWait" value="6000"></property>
		<property name="maxIdle" value="20"></property>
		<property name="minIdle" value="3"></property>
		<property name="removeAbandoned" value="true"></property>
		<property name="removeAbandonedTimeout" value="180"></property>
		<property name="connectionProperties" value="clientEncoding=UTF-8"></property>
	</bean>

	<!-- 配置SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis_configuration.xml"></property>
		<property name="mapperLocations" value="classpath:cn/jbit/webbs/dao/*.xml" />
	</bean>

	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 注解驱动事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 系统配置参数Bean -->
	<bean id="sysConfiguration" class="cn.jbit.webbs.SysConfiguration"></bean>

	<!-- 扫描dao包生成dao Bean -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.jbit.webbs.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 启用注解生存Bean -->
	<context:annotation-config />
	<!-- 扫描service包生成Bean -->
	<context:component-scan base-package="cn.jbit.webbs.service" />

	<!-- web service 客户端代理对象工厂Bean：CommonWService -->
	<bean id="commonWServiceFactoryBean" class="org.apache.cxf.jaxws.JaxWsProxyFactoryBean">
		<property name="serviceClass" value="cn.jbit.mhpay.ws.CommonWService"></property>
		<property name="address" value="${wservice.url.common}"></property>
	</bean>

	<!-- web service 客户端代理对象：CommonWService -->
	<bean id="commonWService" class="cn.jbit.mhpay.ws.CommonWService"
		factory-bean="commonWServiceFactoryBean" factory-method="create"></bean>

	<!-- web service 客户端代理对象工厂Bean：PayWService -->
	<bean id="payWServiceFactoryBean" class="org.apache.cxf.jaxws.JaxWsProxyFactoryBean">
		<property name="serviceClass" value="cn.jbit.mhpay.ws.PayWService"></property>
		<property name="address" value="${wservice.url.pay}"></property>
		<property name="outInterceptors">
			<bean class="cn.jbit.mhpay.ws.client.SecurityVerifyInterceptor"></bean>
		</property>
	</bean>

	<!-- web service 客户端代理对象：PayWService -->
	<bean id="payWService" class="cn.jbit.mhpay.ws.PayWService"
		factory-bean="payWServiceFactoryBean" factory-method="create"></bean>



</beans>